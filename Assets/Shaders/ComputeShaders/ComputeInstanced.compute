// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel InstanceMatrix

struct ObjInfo {
    float4 position;
    float4 color;
    float4 scale;
};

RWStructuredBuffer<ObjInfo> dataBuffer;
RWStructuredBuffer<float4x4> matrixBuffer;
RWStructuredBuffer<float4x4> inverseMatrixBuffer;


[numthreads(64, 1, 1)]
void InstanceMatrix(uint3 dispatchID : SV_DispatchThreadID) {
    int id = dispatchID.x;

    matrixBuffer[id] = float4x4(
        float4(dataBuffer[id].scale.x, 0, 0, dataBuffer[id].position.x),
        float4(0, dataBuffer[id].scale.y, 0, dataBuffer[id].position.y),
        float4(0, 0, dataBuffer[id].scale.z, dataBuffer[id].position.z),
        float4(0, 0, 0, 1));

    inverseMatrixBuffer[id] = float4x4(
        float4(1.0f / dataBuffer[id].scale.x, 0, 0, -dataBuffer[id].position.x),
        float4(0, 1.0f / dataBuffer[id].scale.y, 0, -dataBuffer[id].position.y),
        float4(0, 0, 1.0f / dataBuffer[id].scale.z, -dataBuffer[id].position.z),
        float4(0, 0, 0, 1));
}
